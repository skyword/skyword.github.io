swagger: '2.0'
x-api-id: 'skyword-push-publishing'
x-samples-languages: ['curl', 'php', 'java', 'javascript', 'node']
info:
  description: |
    The Skyword Publishing API Specification for external plugins.
  version: 0.1 Beta
  title: Skyword Publishing API
  contact:
    email: support@skyword.com
host: skydrupal7.skyword.com
basePath: /skyword/v1
schemes:
 - http
tags:
- name: authors
- name: content-types
- name: images
- name: taxonomies
- name: posts
- name: version
produces:
  - application/json
paths:
  /authors:
    post:
      tags:
      - authors
      summary: Add a new author to CMS
      consumes:
      - application/json
      parameters:
      - in: body
        name: body
        description: Author to be added to CMS
        required: true
        schema:
          $ref: '#/definitions/Author'
      responses:
        201:
          description: Author created successfully
          headers:
            Link:
              description: URI of newly created author
              type: string
        422:
          description: A validation error has occured
          schema:
            $ref: '#/definitions/GeneralError'
          examples:
            application/json:
              message: Author already exists
              description: 'Author already exists with the id: 12'
            
    get:
      tags:
      - authors
      summary: Retrieve a list of authors
      parameters:
      - $ref: '#/parameters/pageParam'
      - $ref: '#/parameters/perPageParam'
      responses:
        200:
          description: Success
          headers:
            Link:
              description: Pagination links (https://tools.ietf.org/html/rfc5988)
              type: string
            X-Total-Count:
              description: The total number of results
              type: integer
          schema:
            type: array
            items:
              $ref: '#/definitions/Author'
          examples:
            application/json:
              - id: 1
                firstName: John
                lastName: Doe
                email: johndoe@gmail.com
                byline: Mystery Author
              - id: 2
                firstName: Jane
                lastName: Doe
                email: janedoe@gmail.com
                byline: Jane Doe
        404:
          description: No authors found
          schema:
            $ref: '#/definitions/GeneralError'
          examples:
            application/json:
              message: No authors found.
              description: 'Either no authors exist or there is not an author role enabled for Skyword use. Please log into Drupal admin and select an author role at https://BASE_URL/admin/config/services/skyword'
  /authors/{authorId}:
    get:
      tags:
      - authors
      summary: Get a single author instance
      parameters:
      - name: authorId
        in: path
        description: Id of author
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Author'
          examples:
            application/json:
              id: 1
              firstName: John
              lastName: Doe
              email: johndoe@gmail.com
              byline: Mystery Author              
        404:
          description: Author not found
          schema:
            $ref: '#/definitions/GeneralError'
          examples:
            application/json:
              message: Author not found
              description: Author 12 was not found
              
  /content-types:
    get:
      tags:
      - content-types
      summary: Get a list of content types
      parameters:
      - $ref: '#/parameters/pageParam'
      - $ref: '#/parameters/perPageParam'
      responses:
        200:
          description: OK
          headers:
            Link:
              description: Pagination links (https://tools.ietf.org/html/rfc5988)
              type: string
            X-Total-Count:
              description: The total number of results
              type: integer
          schema:
            type: array
            items:
              $ref: '#/definitions/ContentType'
          examples:
            application/json:
              - id: 1
                name: blog
                description: A blog post about our product
                fields:
                  - id: 1
                    name: field_summary
                    label: Summary
                    description: Please enter a summary for the post in 240 characters or less.
                    required: false
                    type: SUMMARY
                  - id: 2
                    name: field_body
                    label: Body
                    description: Main blog text
                    required: true
                    type: TEXTAREA
              - id: 2
                name: article
                description: An article about our company
                fields:
                  - id: 1
                    name: field_summary
                    label: Summary
                    description: Please enter a summary for the post in 240 characters or less.
                    required: false
                    type: SUMMARY
                  - id: 2
                    name: field_body
                    label: Body
                    description: Main article text
                    required: true
                    type: TEXTAREA
  /content-types/{contentTypeId}:
    get:
      tags:
      - content-types
      summary: Get a single content type instance
      parameters:
      - name: contentTypeId
        in: path
        description: Id of content type
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ContentType'
          examples:
            application/json:
              id: 1
              name: blog
              description: A blog post about our product
              fields:
                - id: 1
                  name: field_summary
                  label: Summary
                  description: Please enter a summary for the post in 240 characters or less.
                  required: false
                  type: SUMMARY
                - id: 2
                  name: field_body
                  label: Body
                  description: Main article text
                  required: true
                  type: TEXTAREA
        400:
          description: Invalid id supplied
        404:
          description: Post not found

              
  /images:
    post:
      tags:
      - images
      summary: Add a new image file to CMS
      consumes:
      - application/json
      - application/octet-stream
      parameters:
      - name: Content-Disposition
        in: header
        required: true
        type: string
        description: attachment; filename="image-name.jpeg"
      - in: body
        name: body
        description: Image file to be added to CMS (Only if sending file via json in base64 encoded string)
        required: false
        schema:
          $ref: '#/definitions/ImagePostBase64'
      responses:
        201:
          description: Image created successfully
          headers:
            Link:
              description: URI of newly created image
              type: string
        422:
          description: A validation error has occured
          schema:
            $ref: '#/definitions/GeneralError'
          examples:
            application/json:
              message: Content-Disposition header not set correctly
              description: 'Content-Disposition header must be set in the following format: attachment; filename="filename.jpg"'
    get:
      tags:
      - images
      summary: Retreive a list of image files
      parameters:
      - $ref: '#/parameters/pageParam'
      - $ref: '#/parameters/perPageParam'
      responses:
        200:
          description: Success
          headers:
            Link:
              description: Pagination links (https://tools.ietf.org/html/rfc5988)
              type: string
            X-Total-Count:
              description: The total number of results
              type: integer
          schema:
            type: array
            items:
              $ref: '#/definitions/Image'
          examples:
            application/json:
              - id: 1
                type: image/jpeg
                url: https://some-server.com/files/image1.jpg
                metadata:
                  title: dogs
                  alt: A small dog sitting on top of a very large dog.
              - id: 2
                type: image/jpeg
                url: https://some-server.com/files/image2.jpg
                metadata:
                  title: dogs2
                  alt: Dogs staring at the moon.              
        404:
          description: No images found
          schema:
            $ref: '#/definitions/GeneralError'
          examples:
            application/json:
              message: No images found
              description: No images exist in CMS
  /images/{imageId}:
    get:
      tags:
      - images
      summary: Retrieve information for image file
      parameters:
       - name: imageId
         in: path
         description: Id of image
         required: true
         type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Image'
          examples:
            application/json:
              id: 1
              type: image/jpeg
              url: https://some-server.com/files/image1.jpg
              metadata:
                title: dogs
                alt: A small dog sitting on top of a very large dog.            
        400:
          description: Invalid id supplied
        404:
          description: Image not found
          schema:
            $ref: '#/definitions/GeneralError'
          examples:
            application/json:
              message: Image not found
              description: Image 10 was not found
    delete:
      tags:
      - images
      summary: Delete image file
      parameters:
       - name: imageId
         in: path
         description: Id of image
         required: true
         type: string
      responses:
        204:
          description: Image file deleted
        404:
          description: Image not found
          schema:
            $ref: '#/definitions/GeneralError'
          examples:
            application/json:
              message: Image not found
              description: Image 10 was not found
  /images/{imageId}/metadata:
    post:
      tags:
      - images
      summary: Add metadata information for an image file
      parameters:
        - name: imageId
          in: path
          description: Id of image
          required: true
          type: string
        - in: body
          name: body
          description: Metadata for image file
          required: true
          schema:
            $ref: '#/definitions/ImageMetadata'
      responses:
        201:
          description: OK
          headers:
            Link:
              description: URI of updated image file
              type: string
        404:
            description: Image not found
            schema:
                $ref: '#/definitions/GeneralError'
            examples:
                application/json:
                    message: Image not found
                    description: Image 11 was not found

  /posts:
    post:
      tags:
      - posts
      summary: Create a new post
      consumes:
      - application/json
      parameters:
      - in: body
        name: body
        description: Post to be added to CMS
        required: true
        schema:
          $ref: '#/definitions/Post'
      responses:
        201:
          description: Post created successfully
          headers:
            Link:
              description: URI of newly created post
              type: string
        422:
          description: A validation error has occured
          schema:
            $ref: '#/definitions/GeneralError'
          examples:
            application/json:
              message: Validation Error
              description: Field 'tags' does not exist in type 'post'
   
    get:
      tags:
      - posts
      summary: Get a list of posts
      parameters:
      - $ref: '#/parameters/pageParam'
      - $ref: '#/parameters/perPageParam'
      - $ref: '#/parameters/fields'
      responses:
        200:
          description: Success
          headers:
            Link:
              description: Pagination links (https://tools.ietf.org/html/rfc5988)
              type: string
            X-Total-Count:
              description: The total number of results
              type: integer
          schema:
            type: array
            items:
              $ref: '#/definitions/Post'
          examples:
            application/json: 
              - id: 1
                skywordId: 281474977787970
                type: post
                title: How to Business
                created: 2017-11-14T15:28:25+00:00
                updated: 2017-11-14T16:02:25+00:00
                url: https://myblog.com/article-slug-here
                author: 4
                trackingTag: <script async type='text/javascript' src='//tracking.skyword.com/tracker.js?contentId=281474977787970>
                fields:
                  - name: field_summary
                    value: Lorem ipsum dolor sit amet consectetur adipiscing elit integer aliquet
                    type: TEXT
                  - name: field_body
                    value: <p>Lorem ipsum dolor sit amet consectetur adipiscing elit convallis integer proin quisque cras, diam congue cum mattis lacinia metus maecenas ullamcorper eros per. Habitant pellentesque maecenas augue amet urna nibh montes tellus, primis consectetur viverra convallis vivamus habitasse fermentum vehicula, vitae bibendum nulla sem mollis non id. Aenean purus in nibh bibendum orci inceptos ut, cubilia venenatis semper donec diam hac.</p>
                    type: HTML              
              - id: 2
                skywordId: 281474977787969
                type: post
                title: How to Business Part 2
                created: 2017-11-14T15:28:25+00:00
                updated: 2017-11-14T16:02:25+00:00
                url: https://myblog.com/article-slug-here
                author: 4
                trackingTag: <script async type='text/javascript' src='//tracking.skyword.com/tracker.js?contentId=281474977787970>
                fields:
                  - name: field_summary
                    value: Lorem ipsum dolor sit amet consectetur adipiscing elit integer aliquet
                    type: TEXT
                  - name: field_body
                    value: <p>Lorem ipsum dolor sit amet consectetur adipiscing elit convallis integer proin quisque cras, diam congue cum mattis lacinia metus maecenas ullamcorper eros per. Habitant pellentesque maecenas augue amet urna nibh montes tellus, primis consectetur viverra convallis vivamus habitasse fermentum vehicula, vitae bibendum nulla sem mollis non id. Aenean purus in nibh bibendum orci inceptos ut, cubilia venenatis semper donec diam hac.</p>
                    type: HTML   
  /posts/{postId}:
    get:
      tags:
      - posts
      summary: Get a single post instance
      parameters:
      - name: postId
        in: path
        description: Id of post
        required: true
        type: string
      - $ref: '#/parameters/fields'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Post'
          examples:
            application/json:
              id: 1
              skywordId: 281474977787970
              type: post
              title: How to Business
              created: 2017-11-14T15:28:25+00:00
              updated: 2017-11-14T16:02:25+00:00
              url: https://myblog.com/article-slug-here
              author: 4
              trackingTag: anonymous
              fields:
                - name: field_summary
                  value: Lorem ipsum dolor sit amet consectetur adipiscing elit integer aliquet
                  type: TEXT
                - name: field_body
                  value: <p>Lorem ipsum dolor sit amet consectetur adipiscing elit convallis integer proin quisque cras, diam congue cum mattis lacinia metus maecenas ullamcorper eros per. Habitant pellentesque maecenas augue amet urna nibh montes tellus, primis consectetur viverra convallis vivamus habitasse fermentum vehicula, vitae bibendum nulla sem mollis non id. Aenean purus in nibh bibendum orci inceptos ut, cubilia venenatis semper donec diam hac.</p>
                  type: HTML
        404:
          description: Post not found
          schema:
            $ref: '#/definitions/GeneralError'
          examples:
            application/json:
              message: Not Found
              description: Post 4 not found. It either does not exist or its content type is not enabled for Skyword use.
    delete:
      tags:
      - posts
      summary: Delete post
      parameters:
      - name: postId
        in: path
        description: Id of post
        required: true
        type: string
      responses:
        204:
          description: Post deleted successfully
        404:
          description: Post not found
          schema:
            $ref: '#/definitions/GeneralError'
          examples:
            application/json:
              message: Not Found
              description: Post 4 not found. It either does not exist or its content type is not enabled for Skyword use.
              
  /taxonomies:
    get:
      tags:
      - taxonomies
      summary: Retreive a list of taxonomies
      parameters:
      - $ref: '#/parameters/pageParam'
      - $ref: '#/parameters/perPageParam'
      responses:
        200:
          description: Success
          headers:
            Link:
              description: Pagination links (https://tools.ietf.org/html/rfc5988)
              type: string
            X-Total-Count:
              description: The total number of results
              type: integer
          schema:
            type: array
            items:
              $ref: '#/definitions/Taxonomy'
          examples:
            application/json:
              - id: 1
                name: Tags
                description: Tags for the article
                numTerms: 45
              - id: 2
                name: Category
                description: Categories for the article
                numTerms: 100
        404:
          description: No taxonomies found
          schema:
            $ref: '#/definitions/GeneralError'
          examples:
            application/json:
              message: No taxonomies found
              description: 'Either no taxonomies exist or there are no enabled taxonomies for Skyword use. Please log into Drupal admin and enable taxonomies at https://BASE_URL/admin/config/services/skyword'
  /taxonomies/{taxonomyId}:
    get:
      tags:
      - taxonomies
      summary: Retrieve a specific taxonomy
      parameters:
      - name: taxonomyId
        in: path
        description: Id of taxonomy
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Taxonomy'
          examples:
            application/json:
              id: 1
              name: Tags
              description: Tags for the article
              numTerms: 45
        404:
          description: Taxonomy not found
          schema:
            $ref: '#/definitions/GeneralError'
          examples:
            application/json:
              message: Taxonomy not found
              description: Taxonomy 5 was not found
  /taxonomies/{taxonomyId}/terms:
    get:
      tags:
      - taxonomies
      summary: Retrieve a list of terms for a given taxonomy
      parameters:
      - $ref: '#/parameters/pageParam'
      - $ref: '#/parameters/perPageParam'
      - name: taxonomyId
        in: path
        description: Id of taxonomy
        required: true
        type: string
      responses:
        200:
          description: Success
          headers:
            Link:
              description: Pagination links (https://tools.ietf.org/html/rfc5988)
              type: string
            X-Total-Count:
              description: The total number of results
              type: integer
          schema:
            type: array
            items:
              $ref: '#/definitions/Term'
          examples:
            application/json:
              - id: 1
                value: dogs
              - id: 2
                value: cats
        400:
            description: Invalid id supplied
        404:
          description: Taxonomy not found
          schema:
            $ref: '#/definitions/GeneralError'
          examples:
            application/json:
              message: Taxonomy not found
              description: Taxonomy 5 was not found
    post:
      tags:
      - taxonomies
      summary: Create a new taxonomy term
      parameters:
        - name: taxonomyId
          in: path
          description: Id of taxonomy
          required: true
          type: string
        - in: body
          name: body
          description: Term data
          required: true
          schema:
            $ref: '#/definitions/Term'
      responses:
        201:
          description: OK
          headers:
            Link:
              description: URI of created term
              type: string
        404:
          description: Taxonomy not found
          schema:
            $ref: '#/definitions/GeneralError'
          examples:
            application/json:
              message: Taxonomy not found
              description: Taxonomy 5 was not found
        422:
          description: A validation error has occured
  /taxonomies/{taxonomyId}/terms/{termId}:
    get:
      tags:
      - taxonomies
      summary: Retrieve a specific term from a taxonomy
      parameters:
      - name: taxonomyId
        in: path
        description: Id of taxonomy
        required: true
        type: string
      - name: termId
        in: path
        description: Id of term
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Term'
          examples:
            application/json:
              id: 1
              value: dogs
        404:
          description: Term not found
          schema:
            $ref: '#/definitions/GeneralError'
          examples:
            application/json:
              message: Term not found
              description: Term 14 from Taxonomy 5 was not found    
  /version:
    get:
      tags:
      - version
      summary: Get version information
      description: >-
        Returns basic vendor and version information of the CMS, the installed version of the Skyword plugin/module, and the programming language and version used.  This API call is a basic health check as it will return data if the Skyword plugin/module is installed and the authentication information is configured successfully.
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Version'
          examples:
            application/json:
              plugin:
                version: 1.2
                language:
                  name: PHP
                  version: 5.6
              cms:
                name: Drupal
                version: 7.1.2
                
definitions:
  Author:
    type: object
    required:
    - firstName
    - lastName
    - email
    - byline
    properties:
      id:
        type: string
        example: '1'
        description: A unique identifier of the author.
      firstName:
        type: string
        example: "Joe"
        description: The first name given to the author
      lastName:
        type: string
        example: "Schmoe"
        description: The last name given to the author
      email:
        type: string
        example: "jschmoe@gmail.com"
        description: The email of the author
      byline:
        type: string
        example: "Joseph Schmoe"
        description: The byline of the author.
      icon:
        type: string
        example: "https://s.gravatar.com/avatar/a75b34534543195aee714af2"
        description: Link to the author’s profile picture (Only send if set)
  CreateAuthor:
    type: object
    required:
    - firstName
    - lastName
    - email
    - byline
    properties:
      id:
        type: string
        example: '1'
        description: A unique identifier of the author.
      firstName:
        type: string
        example: "Joe"
        description: The first name given to the author
      lastName:
        type: string
        example: "Schmoe"
        description: The last name given to the author
      email:
        type: string
        example: "jschmoe@gmail.com"
        description: The email of the author
      byline:
        type: string
        example: "Joseph Schmoe"
        description: The byline of the author.
      profileImage:
        fields:
        type: array
        items:
            $ref: '#/definitions/PostField'
        example:
        - name: fileName
          value: image.jpg
          type: META
        - name: imageData
          value: <base64 encoded image>
          type: IMAGE
        - name: mimeType
          value: image/jpg
          type: META
  Image:
    type: object
    properties:
      id:
        type: string
        example: '1'
        description: A unique identifier of the Image.
      type:
        type: string
        example: image/jpeg
        description: The image content type. (image/jpeg, image/gif, etc..)
      url:
        type: string
        example: https://some-server/files/image1.jpg
        description: The url to download the image file
      metadata:
        $ref: '#/definitions/ImageMetadata'
  ImageMetadata:
    type: object
    properties:
      title:
        type: string
        example: Big Dog
        description: The title to be used in an <img/> tag
      alt:
        type: string
        example: Leonberger
        description: The alt text to use in an <img/> tag
  ImagePostBase64:
    type: object
    required:
    - type
    - file
    - size
    properties:
      type:
        type: string
        example: image/jpeg
        description: The mime type of the file. (image/jpeg, image/gif, etc..)
      file:
        type: string
        example: Base64 encoded string here
        description: Base64 encoded file
      size:
        type: integer
        example: 21200
        description: File size in bytes
  Taxonomy:
    type: object
    properties:
      id:
        type: string
        example: '1'
        description: A unique identifier of the taxonomy.
      name:
        type: string
        example: Tags
        description: The name given to the taxonomy.
      description:
        type: string
        example: tags for articles
        description: A description of the taxonomy (if any).
      numTerms:
        type: integer
        example: 11
        description: Number of terms associated with taxonomy.
  Term:
    type: object
    properties:
      id:
        type: string
        example: '1'
        description: The identifier of the term.
      value:
        type: string
        example: 'dog'
        description: The value of the element.
      parent:
        type: string
        example: "animals"
        description: The parent element (if present)
  Version:
    type: object
    properties:
      plugin:
        type: object
        properties:
          version:
            type: string
            example: '1.2'
            description: The version of the plugin installed.
          language:
            type: object
            properties:
              name:
                type: string
                example: PHP
                description: The name of the programming language used in the plugin.
              version:
                type: string
                example: '5.6'
                description: The version of the programming language used
      cms:
        type: object
        properties:
          name:
            type: string
            example: Drupal
            description: The name of the CMS vendor. \"Drupal\", \"WordPress\", etc...
          version:
            type: string
            example: '7.1.2'
            description: The version number of the CMS.
  Post:
    type: object
    required:
    - type
    - title
    - author
    - fields
    properties:
      id:
        type: string
        example: '1'
        description: CMS id for post
      skywordId:
        type: number
        example: 281474977787970
        description: Skyword id for post
      type:
        type: string
        example: 'post'
        description: The content type of the post
      title:
        type: string
        example: 'How to Business'
        description: The title of the post
      created:
        type: string
        format: date-time
        example: '2017-11-14T15:28:25+00:00'
        description: Date the post was created
      updated:
        type: string
        format: date-time
        example: '2017-11-14T16:02:25+00:00'
        description: Date the post was last updated
      url:
        type: string
        example: https://myblog.com/article-slug-here
        description: The url of the post
      author:
        type: string
        example: '4'
        description: The author id that the post should be attached to
      trackingTag:
        type: string
        example: 'true'
        description: A value describing how to append the Skyword tracking tag ("true", "false", "anonymous")
      fields:
        type: array
        items:
            $ref: '#/definitions/PostField'
        example:
        - name: field_summary
          value: Lorem ipsum dolor sit amet consectetur adipiscing elit integer aliquet
          type: TEXT
        - name: field_body
          value: <p>Lorem ipsum dolor sit amet consectetur adipiscing elit convallis integer proin quisque cras, diam congue cum mattis lacinia metus maecenas ullamcorper eros per. Habitant pellentesque maecenas augue amet urna nibh montes tellus, primis consectetur viverra convallis vivamus habitasse fermentum vehicula, vitae bibendum nulla sem mollis non id. Aenean purus in nibh bibendum orci inceptos ut, cubilia venenatis semper donec diam hac.</p>
          type: HTML
  PostField:
    type: object
    required:
    - name
    - value
    - type
    properties:
      name:
        type: string
        example: field_summary
        description: The internal name of the field in the CMS
      value:
        type: string
        example: Lorem ipsum dolor sit amet consectetur adipiscing elit integer aliquet
        description: The value to enter into the field
      type:
        type: string
        example: TEXT
        enum:
        - TEXT
        - HTML
        - META 
        - IMAGE
        - TAXONOMY
        - DATE
        - BOOLEAN
        description: |
          The type of data
          * TEXT - A field that only accepts plain text.
          * HTML - A field that will accept text with html.
          * META - A field that contains meta data. 
          * IMAGE - A field that contains an image.
          * TAXONOMY - A field that is attached to a taxonomy.
          * DATE - A field that is a date. ISO-8601 format ('2017-11-09T15:20:51Z')
          * BOOLEAN - A field that is true or false. A checkbox for example.
  ContentType:
    type: object
    required:
    - name
    - fields
    properties:
      id:
        type: string
        example: '1'
        description: Internal CMS id
      name:
        type: string
        example: blog
        description: The name of the content type
      description:
        type: string
        example: A blog post for our product.
        description: The decription for the content type
      fields:
        type: array
        items:
            $ref: '#/definitions/ContentTypeField'
  ContentTypeField:
    type: object
    required:
    - name
    - type
    properties:
      id:
        type: string
        example: 1
        description: The id of the field
      name:
        type: string
        example: field_summary
        description: The internal name of the field in the CMS
      label:
        type: string
        example: Summary
        description: The label for the field
      description:
        type: string
        example: Please enter a summary for the post in 240 characters or less.
        description: The description or help text for the field
      required:
        type: boolean
        description: The field is required to create a post. Will default to FALSE
      type:
        type: string
        example: title
        enum:
        - TITLE
        - TEXT-FIELD
        - TEXT-AREA
        - SELECT-SINGLE
        - SELECT-MULTIPLE
        - TAXONOMY-SELECT-SINGLE
        - TAXONOMY-SELECT-MULTIPLE
        - TAXONOMY-TEXT-FIELD
        - CHECKBOX
        - SUMMARY
        - IMAGE
        - DATETIME
        - UNKNOWN
        description: |
          The type of field
          * TITLE - The title of a post. Usually a single line of text.
          * TEXT-FIELD - A single line of text field. Can contain html or plain text.
          * TEXT-AREA - Multi-line text of any length. Can contain html or plain text.
          * SELECT-SINGLE - A dropdown that only allows one selection.
          * SELECT-MULTIPLE - A dropdown that allows any amount of selections.
          * TAXONOMY-SELECT-SINGLE - A dropdown that only allows one selection and is tied to a taxonomy.
          * TAXONOMY-SELECT-MULTIPLE - A dropdown that allows any amount of selections and is tied to a taxonomy.
          * TAXONOMY-TEXT-FIELD - A text field that contains a comma serperated list of taxonomy terms. Usually has autocomplete functionality.
          * CHECKBOX - A checkbox that can only be true or false.
          * SUMMARY - The summary of the post. Used when a CMS has a special field for a summary.
          * IMAGE - A field that only accepts an image.
          * DATETIME - A field that is a date. ISO-8601 format ('2017-11-09T15:20:51Z')
          * UNKNOWN - A field that does not directly map into any of the above.
  GeneralError:
    type: object
    properties:
      message:
        type: string
      description:
        type: string
parameters:
  pageParam:
    name: page
    in: query
    type: number
    description: The starting page number. Default is 1.
    required: false
    default : 1
  perPageParam:
    name: per_page
    in: query
    type: number
    description: The number to retrieve per page. Default is 250.
    required: false
    default: 250
  fields:
    name: fields
    in: query
    type: string
    description: Comma delimited fields names to include in the response. If not sent, all fields are returned.
    required: false
